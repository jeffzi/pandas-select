[build-system]
requires = ["poetry>=0.1.1.4"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "pandas-select"
version = "0.2.0"
description = "Supercharged DataFrame indexing"
license = "BSD-3-Clause"
authors = ["Jean-Francois Zinque <jzinque@gmail.com>"]
readme = "README.rst"
documentation = "https://pandas-select.readthedocs.io/"
homepage = "https://github.com/jeffzi/pandas-select/"
repository = "https://github.com/jeffzi/pandas-select/"
keywords = ["pandas", "scikit-learn"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering"
]

[tool.poetry.dependencies]
python = ">=3.6.1, <3.10"
pandas = ">=0.25.3"
importlib_metadata = { version = "^1.5.0", python = "<3.8" }
pandera = { version = "^0.6.0", optional = true }
scikit-learn = { version = ">=0.20", optional = true }
#docs
furo = { version = "^2020.12.9-beta.21", optional = true }
ipython = { version = "^7.12.0", optional = true }
Sphinx = { version = "^3.4.0", optional = true }
sphinx-copybutton = { version = "^0.3.1", optional = true }
sphinx-panels = { version = "^0.5.2", optional = true }
xdoctest = { version = "^0.15.0", optional = true }
#tests
pytest = { version = "^6.2.1", optional = true }

[tool.poetry.extras]
docs = [
    "furo",
    "ipython",
    "pandera",
    "scikit-learn",
    "sphinx_panels",
    "sphinx",
    "xdoctest"
]
tests = ["pandera", "pytest", "scikit-learn"]

[tool.black]
line-length = 88
target-version = ["py36", "py37", "py38"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
float_to_top = true
profile = "black"

[tool.coverage.run]
parallel = true
branch = true
source = ["pandas_select"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    py{3.6,3.7,3.8,3.9}-pandas{0.25.3,latest}
    docs
    lint
    coverage
    package
isolated_build=true
skip_missing_interpreters=true

[testenv]
deps =
    coverage[toml]>=5.3
    pandas0.25.3: pandas==0.25.3
    pandaslatest: pandas
extras=tests
commands=
    coverage run --source pandas_select/ --omit=pandas_select/_version.py -p -m pytest --tb=short --basetemp={envtmpdir} {posargs}
    coverage combine
    coverage html
    coverage report

[testenv:lint]
skip_install = True
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure

[testenv:docs]
basepython=python3.8
extras=docs
commands =
    rm -rf docs/_build
    python -m xdoctest pandas_select/
    sphinx-build -n -T -b html -d {envtmpdir}/doctrees docs docs/_build/html
    python -m doctest README.rst

[testenv:package]
skip_install = True
whitelist_externals = poetry
deps = twine
commands =
    poetry build
    python3 -m twine check dist/*
"""
